# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/durusans/METADATA.json /home/travis/build/fontdirectory/durusans/builds/build
$ cp -a /home/travis/build/fontdirectory/durusans/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/durusans/builds/build
$ cp -a /home/travis/build/fontdirectory/durusans/FONTLOG.txt /home/travis/build/fontdirectory/durusans/builds/build
$ cp -a DuruSans-Regular.ttf.ttx src/DuruSans-Regular.otf.ttx src/DuruSans-Regular-OTF.sfd src/DuruSans-Regular-TTF.sfd DuruSans-Regular.ttf._f_p_g_m.ttx DuruSans-Regular.ttf._l_o_c_a.ttx DuruSans-Regular.ttf._g_l_y_f.ttx DuruSans-Regular.ttf.O_S_2f_2.ttx DuruSans-Regular.ttf._c_m_a_p.ttx DuruSans-Regular.ttf._n_a_m_e.ttx DuruSans-Regular.ttf._c_v_t.ttx DuruSans-Regular.ttf.F_F_T_M_.ttx DuruSans-Regular.ttf.GlyphOrder.ttx DuruSans-Regular.ttf._h_m_t_x.ttx DuruSans-Regular.ttf.G_D_E_F_.ttx DuruSans-Regular.ttf._p_o_s_t.ttx DuruSans-Regular.ttf._m_a_x_p.ttx DuruSans-Regular.ttf._h_h_e_a.ttx DuruSans-Regular.ttf._g_a_s_p.ttx DuruSans-Regular.ttf._h_e_a_d.ttx DuruSans-Regular.ttf._p_r_e_p.ttx src/DuruSans-Regular.otf._h_h_e_a.ttx src/DuruSans-Regular.otf.C_F_F_.ttx src/DuruSans-Regular.otf._p_o_s_t.ttx src/DuruSans-Regular.otf._n_a_m_e.ttx src/DuruSans-Regular.otf.GlyphOrder.ttx src/DuruSans-Regular.otf.O_S_2f_2.ttx src/DuruSans-Regular.otf._h_m_t_x.ttx src/DuruSans-Regular.otf._h_e_a_d.ttx src/DuruSans-Regular.otf._m_a_x_p.ttx src/DuruSans-Regular.otf._c_m_a_p.ttx /home/travis/build/fontdirectory/durusans/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ bakery-lint.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.ttf.ttx /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.otf.ttx /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular-OTF.sfd /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular-TTF.sfd > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ bakery-lint.py upstream-ttx DuruSans-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.ttf.ttx /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ bakery-lint.py upstream-ttx DuruSans-Regular.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.otf.ttx /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ bakery-lint.py upstream DuruSans-Regular-OTF.sfd
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
$ bakery-lint.py upstream DuruSans-Regular-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/durusans/builds/build /home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.ttx
$ font2ttf.py sources/DuruSans-Regular.otf DuruSans-Regular.ttf
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language English (US)
 Mac String: Duru Sans Regular
Windows String: DuruSans-Regular
Warning: Mac and Windows entries in the 'name' table differ for the
 Manufacturer string in the language English (US)
 Mac String: Onur Yazıcıgil
Windows String: Onur Yazõcõgil
Warning: Mac and Windows entries in the 'name' table differ for the
 Designer string in the language English (US)
 Mac String: Onur Yazıcıgil
Windows String: Onur Yazõcõgil
Warning: Mac and Windows entries in the 'name' table differ for the
 Descriptor string in the language English (US)
 Mac String: Duru is low contrast a classic 20th century style sans design. Duru is a new take on mixing the humanist urge with the modernist one. Duru also somehow manages to be elegant and a workhorse type at the same time. Duru can be used at a wide range of sizes.
Windows Stri
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf)
strippedname:/home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular-OTF.sfd
strippedname:/home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular-TTF.sfd
Compiling "/home/travis/build/fontdirectory/durusans/builds/build/sources/DuruSans-Regular.ttx" to "/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'hmtx' table...
strippedname:/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.otf
$ font2ttf.py sources/DuruSans-Regular-OTF.sfd DuruSans-Regular-OTF.ttf
### Test DuruSans-Regular.ttf
$ bakery-lint.py result DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ bakery-nbsp-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf)
$ font2ttf.py sources/DuruSans-Regular-TTF.sfd DuruSans-Regular-TTF.ttf
### Test DuruSans-Regular-OTF.ttf
$ bakery-lint.py result DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ bakery-ascii-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
### Optimize TTF DuruSans-Regular.ttf
$ ls -l 'DuruSans-Regular.ttf'* # look at the size savings of that subset process
DuruSans-Regular.ttf.opt: 46196 bytes
DuruSans-Regular.ttf: 50600 bytes
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf.opt /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
### Autohint TTFs (ttfautohint) DuruSans-Regular.ttf
$ ls -l /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf: 46196 bytes
/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.autohint.ttf: 72124 bytes
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.autohint.ttf /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
### Subset TTFs (pyftsubset) DuruSans-Regular.ttf
Generate DuruSans-Regular.latin
Generate DuruSans-Regular.menu
spaceWidth is    686
nbspWidth is     493
DuruSans-Regular.ttf.fix made with spaceWidth and nbspWidth of 686
strippedname:/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf)
### Test DuruSans-Regular-TTF.ttf
$ bakery-lint.py result DuruSans-Regular-TTF.ttf
### (5 of 6) Generate METADATA.json (genmetadata.py)
$ genmetadata.py /home/travis/build/fontdirectory/durusans/builds/build
{} exists
Designer's name from font is: Onur Yazocogil
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
Original size: 72124\nGzip size: 36079
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
Family Name: Duru Sans
PS Name: DuruSans-Regular
Full Name: DuruSans-Regular
Style: normal
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
Weight: 400
Filename: DuruSans-Regular.ttf
Copyright: Copyright (c) 2010 by Sorkin Type Co with Reserved Font Name Duru.\r\rThis Font Software is licensed under the SIL Open Font License, Version 1.1. This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL
Family Name: Duru Sans
PS Name: DuruSans-Regular
Full Name: Duru Sans Regular
Style: normal
Weight: 400
Filename: DuruSans-Regular-TTF.ttf
Copyright: Copyright (c) 2010 by Sorkin Type Co with Reserved Font Name Duru.\n\nThis Font Software is licensed under the SIL Open Font License, Version 1.1. This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL
Family Name: Duru Sans
PS Name: DuruSans-Regular
Full Name: DuruSans-Regular
Style: normal
Weight: 400
Filename: DuruSans-Regular-OTF.ttf
Copyright: Copyright (c) 2010 by Sorkin Type Co with Reserved Font Name Duru.\r\rThis Font Software is licensed under the SIL Open Font License, Version 1.1. This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
Error: 
ERROR: BUILD FAILED
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ bakery-nbsp-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ bakery-nbsp-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ bakery-ascii-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
### Optimize TTF DuruSans-Regular-OTF.ttf
$ ls -l 'DuruSans-Regular-OTF.ttf'* # look at the size savings of that subset process
DuruSans-Regular-OTF.ttf.opt: 46196 bytes
DuruSans-Regular-OTF.ttf: 50600 bytes
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf.opt /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
### Autohint TTFs (ttfautohint) DuruSans-Regular-OTF.ttf
$ ls -l /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf: 46196 bytes
/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.autohint.ttf: 72124 bytes
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.autohint.ttf /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
### Subset TTFs (pyftsubset) DuruSans-Regular-OTF.ttf
Generate DuruSans-Regular-OTF.latin
Generate DuruSans-Regular-OTF.menu
spaceWidth is    686
nbspWidth is     493
DuruSans-Regular-OTF.ttf.fix made with spaceWidth and nbspWidth of 686
strippedname:/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-OTF.ttf
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ bakery-ascii-fix.py /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
### Optimize TTF DuruSans-Regular-TTF.ttf
$ ls -l 'DuruSans-Regular-TTF.ttf'* # look at the size savings of that subset process
DuruSans-Regular-TTF.ttf.opt: 47584 bytes
DuruSans-Regular-TTF.ttf: 51988 bytes
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) DuruSans-Regular-TTF.ttf
$ ls -l /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf: 47584 bytes
/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.autohint.ttf: 71548 bytes
$ mv /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
### Subset TTFs (pyftsubset) DuruSans-Regular-TTF.ttf
Generate DuruSans-Regular-TTF.latin
Generate DuruSans-Regular-TTF.menu
spaceWidth is    686
nbspWidth is     493
DuruSans-Regular-TTF.ttf.fix made with spaceWidth and nbspWidth of 686
strippedname:/home/travis/build/fontdirectory/durusans/builds/build/DuruSans-Regular-TTF.ttf
